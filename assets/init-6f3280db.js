import{b as _,U as ct,c as he,t as q,M as F,w as ie,T as M,P as lt,B as Se,d as k,v as G,a as j,E as ht,R as N,k as dt,x as P,D as W,j as S,L as ut,y as V,z as ft,A as te,n as de,e as C}from"./index-5f17f4b1.js";import{b as pt,F as gt,B as mt,G as xt,d as _t}from"./Graphics-97860da6.js";import{U as E,T as R,R as ne,S as Ce,i as ae,b as Be,c as Pe,j as Fe,e as bt,r as Me,o as yt,n as Re,a as Tt,g as wt,k as vt,m as St,B as Ae}from"./colorToUniform-cae1a807.js";import{G as Ue,B as ke,b as J,a as I,M as ue}from"./mixColors-bbe5e417.js";import{C as D}from"./CanvasPool-0f528db9.js";import{f as re,C as U,T as fe}from"./TextStyle-507a7e1f.js";import{b as Ct}from"./batchSamplersUniformGroup-669421e0.js";class Ge{static init(e){Object.defineProperty(this,"resizeTo",{set(t){globalThis.removeEventListener("resize",this.queueResize),this._resizeTo=t,t&&(globalThis.addEventListener("resize",this.queueResize),this.resize())},get(){return this._resizeTo}}),this.queueResize=()=>{this._resizeTo&&(this._cancelResize(),this._resizeId=requestAnimationFrame(()=>this.resize()))},this._cancelResize=()=>{this._resizeId&&(cancelAnimationFrame(this._resizeId),this._resizeId=null)},this.resize=()=>{if(!this._resizeTo)return;this._cancelResize();let t,r;if(this._resizeTo===globalThis.window)t=globalThis.innerWidth,r=globalThis.innerHeight;else{const{clientWidth:s,clientHeight:i}=this._resizeTo;t=s,r=i}this.renderer.resize(t,r),this.render()},this._resizeId=null,this._resizeTo=null,this.resizeTo=e.resizeTo||null}static destroy(){globalThis.removeEventListener("resize",this.queueResize),this._cancelResize(),this._cancelResize=null,this.queueResize=null,this.resizeTo=null,this.resize=null}}Ge.extension=_.Application;class ze{static init(e){e=Object.assign({autoStart:!0,sharedTicker:!1},e),Object.defineProperty(this,"ticker",{set(t){this._ticker&&this._ticker.remove(this.render,this),this._ticker=t,t&&t.add(this.render,this,ct.LOW)},get(){return this._ticker}}),this.stop=()=>{this._ticker.stop()},this.start=()=>{this._ticker.start()},this._ticker=null,this.ticker=e.sharedTicker?he.shared:new he,e.autoStart&&this.start()}static destroy(){if(this._ticker){const e=this._ticker;this.ticker=null,e.destroy()}}}ze.extension=_.Application;class He{constructor(e){this._renderer=e}push(e,t,r){this._renderer.renderPipes.batch.break(r),r.add({renderPipeId:"filter",canBundle:!1,action:"pushFilter",container:t,filterEffect:e})}pop(e,t,r){this._renderer.renderPipes.batch.break(r),r.add({renderPipeId:"filter",action:"popFilter",canBundle:!1})}execute(e){e.action==="pushFilter"?this._renderer.filter.push(e):e.action==="popFilter"&&this._renderer.filter.pop()}destroy(){this._renderer=null}}He.extension={type:[_.WebGLPipes,_.WebGPUPipes,_.CanvasPipes],name:"filter"};const Bt=new F;function Pt(n,e){return e.clear(),Ie(n,e),e.isValid||e.set(0,0,0,0),n.isRenderGroupRoot?e.applyMatrix(n.renderGroup.localTransform):e.applyMatrix(n.renderGroup.worldTransform),e}function Ie(n,e){if(n.localDisplayStatus!==7||!n.measurable)return;const t=!!n.effects.length;let r=e;if((n.isRenderGroupRoot||t)&&(r=q.get().clear()),n.boundsArea)e.addRect(n.boundsArea,n.worldTransform);else{if(n.renderPipeId){const i=n.bounds;r.addFrame(i.minX,i.minY,i.maxX,i.maxY,n.groupTransform)}const s=n.children;for(let i=0;i<s.length;i++)Ie(s[i],r)}if(t){let s=!1;for(let i=0;i<n.effects.length;i++)n.effects[i].addBounds&&(s||(s=!0,r.applyMatrix(n.renderGroup.worldTransform)),n.effects[i].addBounds(r,!0));s&&(r.applyMatrix(n.renderGroup.worldTransform.copyTo(Bt).invert()),e.addBounds(r,n.relativeGroupTransform)),e.addBounds(r),q.return(r)}else n.isRenderGroupRoot&&(e.addBounds(r,n.relativeGroupTransform),q.return(r))}function Ft(n,e){e.clear();const t=e.matrix;for(let r=0;r<n.length;r++){const s=n[r];s.globalDisplayStatus<7||(e.matrix=s.worldTransform,s.addBounds(e))}return e.matrix=t,e}const Mt=new Ue({attributes:{aPosition:{buffer:new Float32Array([0,0,1,0,1,1,0,1]),location:0,format:"float32x2",stride:2*4,offset:0}},indexBuffer:new Uint32Array([0,1,2,0,2,3])});class De{constructor(e){this._filterStackIndex=0,this._filterStack=[],this._filterGlobalUniforms=new E({uInputSize:{value:new Float32Array(4),type:"vec4<f32>"},uInputPixel:{value:new Float32Array(4),type:"vec4<f32>"},uInputClamp:{value:new Float32Array(4),type:"vec4<f32>"},uOutputFrame:{value:new Float32Array(4),type:"vec4<f32>"},uGlobalFrame:{value:new Float32Array(4),type:"vec4<f32>"},uOutputTexture:{value:new Float32Array(4),type:"vec4<f32>"}}),this._globalFilterBindGroup=new ke({}),this.renderer=e}push(e){var u;const t=this.renderer,r=e.filterEffect.filters;this._filterStack[this._filterStackIndex]||(this._filterStack[this._filterStackIndex]=this._getFilterData());const s=this._filterStack[this._filterStackIndex];if(this._filterStackIndex++,r.length===0){s.skip=!0;return}const i=s.bounds;e.renderables?Ft(e.renderables,i):e.filterEffect.filterArea?(i.clear(),i.addRect(e.filterEffect.filterArea),i.applyMatrix(e.container.worldTransform)):Pt(e.container,i);const a=t.renderTarget.rootRenderTarget.colorTexture.source;let o=a._resolution,c=0,l=a.antialias,h=!1,d=!1;for(let f=0;f<r.length;f++){const p=r[f];if(o=Math.min(o,p.resolution),c+=p.padding,p.antialias!=="inherit"&&(p.antialias==="on"?l=!0:l=!1),!!!(p.compatibleRenderers&t.type)){d=!1;break}if(p.blendRequired&&!(((u=t.backBuffer)==null?void 0:u.useBackBuffer)??!0)){ie("Blend filter requires backBuffer on WebGL renderer to be enabled. Set `useBackBuffer: true` in the renderer options."),d=!1;break}d=p.enabled||d,h=h||p.blendRequired}if(!d){s.skip=!0;return}if(i.scale(o).fit(t.renderTarget.rootViewPort).scale(1/o).pad(c).ceil(),!i.isPositive){s.skip=!0;return}s.skip=!1,s.bounds=i,s.blendRequired=h,s.container=e.container,s.filterEffect=e.filterEffect,s.previousRenderSurface=t.renderTarget.renderSurface,s.inputTexture=R.getOptimalTexture(i.width,i.height,o,l),t.renderTarget.bind(s.inputTexture,!0),t.globalUniforms.push({offset:i})}pop(){const e=this.renderer;this._filterStackIndex--;const t=this._filterStack[this._filterStackIndex];if(t.skip)return;this._activeFilterData=t;const r=t.inputTexture,s=t.bounds;let i=M.EMPTY;if(e.renderTarget.finishRenderPass(),t.blendRequired){const o=this._filterStackIndex>0?this._filterStack[this._filterStackIndex-1].bounds:null,c=e.renderTarget.getRenderTarget(t.previousRenderSurface);i=this.getBackTexture(c,s,o)}t.backTexture=i;const a=t.filterEffect.filters;if(this._globalFilterBindGroup.setResource(r.source.style,2),this._globalFilterBindGroup.setResource(i.source,3),e.globalUniforms.pop(),a.length===1)a[0].apply(this,r,t.previousRenderSurface,!1),R.returnTexture(r);else{let o=t.inputTexture,c=R.getOptimalTexture(s.width,s.height,o.source._resolution,!1),l=0;for(l=0;l<a.length-1;++l){a[l].apply(this,o,c,!0);const d=o;o=c,c=d}a[l].apply(this,o,t.previousRenderSurface,!1),R.returnTexture(o),R.returnTexture(c)}t.blendRequired&&R.returnTexture(i)}getBackTexture(e,t,r){const s=e.colorTexture.source._resolution,i=R.getOptimalTexture(t.width,t.height,s,!1);let a=t.minX,o=t.minY;r&&(a-=r.minX,o-=r.minY),a=Math.floor(a*s),o=Math.floor(o*s);const c=Math.ceil(t.width*s),l=Math.ceil(t.height*s);return this.renderer.renderTarget.copyToTexture(e,i,{x:a,y:o},{width:c,height:l}),i}applyFilter(e,t,r,s){const i=this.renderer,a=this._filterStack[this._filterStackIndex],o=a.bounds,c=lt.shared,h=a.previousRenderSurface===r;let d=this.renderer.renderTarget.rootRenderTarget.colorTexture.source._resolution,u=this._filterStackIndex-1;for(;u>0&&this._filterStack[u].skip;)--u;u>0&&(d=this._filterStack[u].inputTexture.source._resolution);const f=this._filterGlobalUniforms,p=f.uniforms,g=p.uOutputFrame,m=p.uInputSize,b=p.uInputPixel,x=p.uInputClamp,y=p.uGlobalFrame,T=p.uOutputTexture;if(h){let B=this._filterStackIndex;for(;B>0;){B--;const A=this._filterStack[this._filterStackIndex-1];if(!A.skip){c.x=A.bounds.minX,c.y=A.bounds.minY;break}}g[0]=o.minX-c.x,g[1]=o.minY-c.y}else g[0]=0,g[1]=0;g[2]=t.frame.width,g[3]=t.frame.height,m[0]=t.source.width,m[1]=t.source.height,m[2]=1/m[0],m[3]=1/m[1],b[0]=t.source.pixelWidth,b[1]=t.source.pixelHeight,b[2]=1/b[0],b[3]=1/b[1],x[0]=.5*b[2],x[1]=.5*b[3],x[2]=t.frame.width*m[2]-.5*b[2],x[3]=t.frame.height*m[3]-.5*b[3];const H=this.renderer.renderTarget.rootRenderTarget.colorTexture;y[0]=c.x*d,y[1]=c.y*d,y[2]=H.source.width*d,y[3]=H.source.height*d;const w=this.renderer.renderTarget.getRenderTarget(r);if(i.renderTarget.bind(r,!!s),r instanceof M?(T[0]=r.frame.width,T[1]=r.frame.height):(T[0]=w.width,T[1]=w.height),T[2]=w.isRoot?-1:1,f.update(),i.renderPipes.uniformBatch){const B=i.renderPipes.uniformBatch.getUboResource(f);this._globalFilterBindGroup.setResource(B,0)}else this._globalFilterBindGroup.setResource(f,0);this._globalFilterBindGroup.setResource(t.source,1),this._globalFilterBindGroup.setResource(t.source.style,2),e.groups[0]=this._globalFilterBindGroup,i.encoder.draw({geometry:Mt,shader:e,state:e._state,topology:"triangle-list"}),i.type===ne.WEBGL&&i.renderTarget.finishRenderPass()}_getFilterData(){return{skip:!1,inputTexture:null,bounds:new Se,container:null,filterEffect:null,blendRequired:!1,previousRenderSurface:null}}calculateSpriteMatrix(e,t){const r=this._activeFilterData,s=e.set(r.inputTexture._source.width,0,0,r.inputTexture._source.height,r.bounds.minX,r.bounds.minY),i=t.worldTransform.copyTo(F.shared);return i.invert(),s.prepend(i),s.scale(1/t.texture.frame.width,1/t.texture.frame.height),s.translate(t.anchor.x,t.anchor.y),s}}De.extension={type:[_.WebGLSystem,_.WebGPUSystem],name:"filter"};const Oe=class We extends Ue{constructor(...e){let t=e[0]??{};t instanceof Float32Array&&(k(G,"use new MeshGeometry({ positions, uvs, indices }) instead"),t={positions:t,uvs:e[1],indices:e[2]}),t={...We.defaultOptions,...t};const r=t.positions||new Float32Array([0,0,1,0,1,1,0,1]),s=t.uvs||new Float32Array([0,0,1,0,1,1,0,1]),i=t.indices||new Uint32Array([0,1,2,0,2,3]),a=t.shrinkBuffersToFit,o=new J({data:r,label:"attribute-mesh-positions",shrinkToFit:a,usage:I.VERTEX|I.COPY_DST}),c=new J({data:s,label:"attribute-mesh-uvs",shrinkToFit:a,usage:I.VERTEX|I.COPY_DST}),l=new J({data:i,label:"index-mesh-buffer",shrinkToFit:a,usage:I.INDEX|I.COPY_DST});super({attributes:{aPosition:{buffer:o,format:"float32x2",stride:2*4,offset:0},aUV:{buffer:c,format:"float32x2",stride:2*4,offset:0}},indexBuffer:l,topology:t.topology}),this.batchMode="auto"}get positions(){return this.attributes.aPosition.buffer.data}set positions(e){this.attributes.aPosition.buffer.data=e}get uvs(){return this.attributes.aUV.buffer.data}set uvs(e){this.attributes.aUV.buffer.data=e}get indices(){return this.indexBuffer.data}set indices(e){this.indexBuffer.data=e}};Oe.defaultOptions={topology:"triangle-list",shrinkBuffersToFit:!1};let oe=Oe;function K(n,e){if(n.texture===M.WHITE&&!n.fill)return j.shared.setValue(n.color).toHex();if(n.fill){if(n.fill instanceof pt){const t=n.fill,r=e.createPattern(t.texture.source.resource,"repeat"),s=t.transform.copyTo(F.shared);return s.scale(t.texture.frame.width,t.texture.frame.height),r.setTransform(s),r}else if(n.fill instanceof gt){const t=n.fill;if(t.type==="linear"){const r=e.createLinearGradient(t.x0,t.y0,t.x1,t.y1);return t.gradientStops.forEach(s=>{r.addColorStop(s.offset,j.shared.setValue(s.color).toHex())}),r}}}else{const t=e.createPattern(n.texture.source.resource,"repeat"),r=n.matrix.copyTo(F.shared);return r.scale(n.texture.frame.width,n.texture.frame.height),t.setTransform(r),t}return ie("FillStyle not recognised",n),"red"}class Ee extends ht{constructor(){super(...arguments),this.chars=Object.create(null),this.lineHeight=0,this.fontFamily="",this.fontMetrics={fontSize:0,ascent:0,descent:0},this.baseLineOffset=0,this.distanceField={type:"none",range:0},this.pages=[],this.baseMeasurementFontSize=100,this.baseRenderedFontSize=100}get font(){return k(G,"BitmapFont.font is deprecated, please use BitmapFont.fontFamily instead."),this.fontFamily}get pageTextures(){return k(G,"BitmapFont.pageTextures is deprecated, please use BitmapFont.pages instead."),this.pages}get size(){return k(G,"BitmapFont.size is deprecated, please use BitmapFont.fontMetrics.fontSize instead."),this.fontMetrics.fontSize}get distanceFieldRange(){return k(G,"BitmapFont.distanceFieldRange is deprecated, please use BitmapFont.distanceField.range instead."),this.distanceField.range}get distanceFieldType(){return k(G,"BitmapFont.distanceFieldType is deprecated, please use BitmapFont.distanceField.type instead."),this.distanceField.type}destroy(){this.emit("destroy",this),this.removeAllListeners();for(const e in this.chars)this.chars[e].texture.destroy();this.chars=null}}function Le(n){if(n==="")return[];typeof n=="string"&&(n=[n]);const e=[];for(let t=0,r=n.length;t<r;t++){const s=n[t];if(Array.isArray(s)){if(s.length!==2)throw new Error(`[BitmapFont]: Invalid character range length, expecting 2 got ${s.length}.`);if(s[0].length===0||s[1].length===0)throw new Error("[BitmapFont]: Invalid character delimiter.");const i=s[0].charCodeAt(0),a=s[1].charCodeAt(0);if(a<i)throw new Error("[BitmapFont]: Invalid character range.");for(let o=i,c=a;o<=c;o++)e.push(String.fromCharCode(o))}else e.push(...Array.from(s))}if(e.length===0)throw new Error("[BitmapFont]: Empty set when resolving characters.");return e}class pe extends Ee{constructor(e){super(),this.resolution=1,this.pages=[],this._padding=4,this._measureCache=Object.create(null),this._currentChars=[],this._currentX=0,this._currentY=0,this._currentPageIndex=-1,this._skipKerning=!1;const t=e,r=t.style.clone();t.overrideFill&&(r._fill.color=16777215,r._fill.alpha=1,r._fill.texture=M.WHITE,r._fill.fill=null);const s=r.fontSize;r.fontSize=this.baseMeasurementFontSize;const i=re(r);t.overrideSize?r._stroke&&(r._stroke.width*=this.baseRenderedFontSize/s):r.fontSize=this.baseRenderedFontSize=s,this._style=r,this._skipKerning=t.skipKerning??!1,this.resolution=t.resolution??1,this._padding=t.padding??4,this.fontMetrics=U.measureFont(i),this.lineHeight=r.lineHeight||this.fontMetrics.fontSize||r.fontSize}ensureCharacters(e){var g,m;const t=Le(e).filter(b=>!this._currentChars.includes(b)).filter((b,x,y)=>y.indexOf(b)===x);if(!t.length)return;this._currentChars=[...this._currentChars,...t];let r;this._currentPageIndex===-1?r=this._nextPage():r=this.pages[this._currentPageIndex];let{canvas:s,context:i}=r.canvasAndContext,a=r.texture.source;const o=this._style;let c=this._currentX,l=this._currentY;const h=this.baseRenderedFontSize/this.baseMeasurementFontSize,d=this._padding*h,u=o.fontStyle==="italic"?2:1;let f=0,p=!1;for(let b=0;b<t.length;b++){const x=t[b],y=U.measureText(x,o,s,!1);y.lineHeight=y.height;const T=u*y.width*h,H=y.height*h,w=T+d*2,B=H+d*2;if(p=!1,x!==`
`&&x!=="\r"&&x!=="	"&&x!==" "&&(p=!0,f=Math.ceil(Math.max(B,f))),c+w>512&&(l+=f,f=B,c=0,l+f>512)){a.update();const z=this._nextPage();s=z.canvasAndContext.canvas,i=z.canvasAndContext.context,a=z.texture.source,l=0}const A=T/h-(((g=o.dropShadow)==null?void 0:g.distance)??0)-(((m=o._stroke)==null?void 0:m.width)??0);if(this.chars[x]={id:x.codePointAt(0),xOffset:-this._padding,yOffset:-this._padding,xAdvance:A,kerning:{}},p){this._drawGlyph(i,y,c+d,l+d,h,o);const z=a.width*h,O=a.height*h,L=new N(c/z*a.width,l/O*a.height,w/z*a.width,B/O*a.height);this.chars[x].texture=new M({source:a,frame:L}),c+=Math.ceil(w)}}a.update(),this._currentX=c,this._currentY=l,this._skipKerning&&this._applyKerning(t,i)}get pageTextures(){return k(G,"BitmapFont.pageTextures is deprecated, please use BitmapFont.pages instead."),this.pages}_applyKerning(e,t){const r=this._measureCache;for(let s=0;s<e.length;s++){const i=e[s];for(let a=0;a<this._currentChars.length;a++){const o=this._currentChars[a];let c=r[i];c||(c=r[i]=t.measureText(i).width);let l=r[o];l||(l=r[o]=t.measureText(o).width);let h=t.measureText(i+o).width,d=h-(c+l);d&&(this.chars[i].kerning[o]=d),h=t.measureText(i+o).width,d=h-(c+l),d&&(this.chars[o].kerning[i]=d)}}}_nextPage(){this._currentPageIndex++;const e=this.resolution,t=D.getOptimalCanvasAndContext(512,512,e);this._setupContext(t.context,this._style,e);const r=e*(this.baseRenderedFontSize/this.baseMeasurementFontSize),s=new M({source:new dt({resource:t.canvas,resolution:r,alphaMode:"premultiply-alpha-on-upload"})}),i={canvasAndContext:t,texture:s};return this.pages[this._currentPageIndex]=i,i}_setupContext(e,t,r){t.fontSize=this.baseRenderedFontSize,e.scale(r,r),e.font=re(t),t.fontSize=this.baseMeasurementFontSize,e.textBaseline=t.textBaseline;const s=t._stroke,i=(s==null?void 0:s.width)??0;if(s&&(e.lineWidth=i,e.lineJoin=s.join,e.miterLimit=s.miterLimit,e.strokeStyle=K(s,e)),t._fill&&(e.fillStyle=K(t._fill,e)),t.dropShadow){const a=t.dropShadow,o=j.shared.setValue(a.color).toArray(),c=a.blur*r,l=a.distance*r;e.shadowColor=`rgba(${o[0]*255},${o[1]*255},${o[2]*255},${a.alpha})`,e.shadowBlur=c,e.shadowOffsetX=Math.cos(a.angle)*l,e.shadowOffsetY=Math.sin(a.angle)*l}else e.shadowColor="black",e.shadowBlur=0,e.shadowOffsetX=0,e.shadowOffsetY=0}_drawGlyph(e,t,r,s,i,a){const o=t.text,c=t.fontProperties,l=a._stroke,h=((l==null?void 0:l.width)??0)*i,d=r+h/2,u=s-h/2,f=c.descent*i,p=t.lineHeight*i;a.stroke&&h&&e.strokeText(o,d,u+p-f),a._fill&&e.fillText(o,d,u+p-f)}destroy(){super.destroy();for(let e=0;e<this.pages.length;e++){const{canvasAndContext:t,texture:r}=this.pages[e];D.returnCanvasAndContext(t),r.destroy(!0)}this.pages=null}}function Xe(n,e,t){const r={width:0,height:0,offsetY:0,scale:e.fontSize/t.baseMeasurementFontSize,lines:[{width:0,charPositions:[],spaceWidth:0,spacesIndex:[],chars:[]}]};r.offsetY=t.baseLineOffset;let s=r.lines[0],i=null,a=!0;const o={spaceWord:!1,width:0,start:0,index:0,positions:[],chars:[]},c=f=>{const p=s.width;for(let g=0;g<o.index;g++){const m=f.positions[g];s.chars.push(f.chars[g]),s.charPositions.push(m+p)}s.width+=f.width,a=!1,o.width=0,o.index=0,o.chars.length=0},l=()=>{let f=s.chars.length-1,p=s.chars[f];for(;p===" ";)s.width-=t.chars[p].xAdvance,p=s.chars[--f];r.width=Math.max(r.width,s.width),s={width:0,charPositions:[],chars:[],spaceWidth:0,spacesIndex:[]},a=!0,r.lines.push(s),r.height+=t.lineHeight},h=t.baseMeasurementFontSize/e.fontSize,d=e.letterSpacing*h,u=e.wordWrapWidth*h;for(let f=0;f<n.length+1;f++){let p;const g=f===n.length;g||(p=n[f]);const m=t.chars[p]||t.chars[" "];if(/(?:\s)/.test(p)||p==="\r"||p===`
`||g){if(!a&&e.wordWrap&&s.width+o.width-d>u?(l(),c(o),g||s.charPositions.push(0)):(o.start=s.width,c(o),g||s.charPositions.push(0)),p==="\r"||p===`
`)s.width!==0&&l();else if(!g){const T=m.xAdvance+(m.kerning[i]||0)+d;s.width+=T,s.spaceWidth=T,s.spacesIndex.push(s.charPositions.length),s.chars.push(p)}}else{const y=m.kerning[i]||0,T=m.xAdvance+y+d;o.positions[o.index++]=o.width+y,o.chars.push(p),o.width+=T}i=p}return l(),e.align==="center"?Rt(r):e.align==="right"?At(r):e.align==="justify"&&Ut(r),r}function Rt(n){for(let e=0;e<n.lines.length;e++){const t=n.lines[e],r=n.width/2-t.width/2;for(let s=0;s<t.charPositions.length;s++)t.charPositions[s]+=r}}function At(n){for(let e=0;e<n.lines.length;e++){const t=n.lines[e],r=n.width-t.width;for(let s=0;s<t.charPositions.length;s++)t.charPositions[s]+=r}}function Ut(n){const e=n.width;for(let t=0;t<n.lines.length;t++){const r=n.lines[t];let s=0,i=r.spacesIndex[s++],a=0;const o=r.spacesIndex.length,l=(e-r.width)/o;for(let h=0;h<r.charPositions.length;h++)h===i&&(i=r.spacesIndex[s++],a+=l),r.charPositions[h]+=a}}class kt{constructor(){this.ALPHA=[["a","z"],["A","Z"]," "],this.NUMERIC=[["0","9"]],this.ALPHANUMERIC=[["a","z"],["A","Z"],["0","9"]," "],this.ASCII=[[" ","~"]],this.defaultOptions={chars:this.ALPHANUMERIC,resolution:1,padding:4,skipKerning:!1}}getFont(e,t){var a;let r=`${t.fontFamily}-bitmap`,s=!0;if(t._fill.fill&&(r+=t._fill.fill.uid,s=!1),!P.has(r)){const o=new pe({style:t,overrideFill:s,overrideSize:!0,...this.defaultOptions});o.once("destroy",()=>P.remove(r)),P.set(r,o)}const i=P.get(r);return(a=i.ensureCharacters)==null||a.call(i,e),i}getLayout(e,t){const r=this.getFont(e,t);return Xe(e.split(""),t,r)}measureText(e,t){return this.getLayout(e,t)}install(...e){var l,h,d,u;let t=e[0];typeof t=="string"&&(t={name:t,style:e[1],chars:(l=e[2])==null?void 0:l.chars,resolution:(h=e[2])==null?void 0:h.resolution,padding:(d=e[2])==null?void 0:d.padding,skipKerning:(u=e[2])==null?void 0:u.skipKerning},k(G,"BitmapFontManager.install(name, style, options) is deprecated, use BitmapFontManager.install({name, style, ...options})"));const r=t==null?void 0:t.name;if(!r)throw new Error("[BitmapFontManager] Property `name` is required.");t={...this.defaultOptions,...t};const s=t.style,i=s instanceof fe?s:new fe(s),a=i._fill.fill!==null&&i._fill.fill!==void 0,o=new pe({style:i,overrideFill:a,skipKerning:t.skipKerning,padding:t.padding,resolution:t.resolution,overrideSize:!1}),c=Le(t.chars);return o.ensureCharacters(c.join("")),P.set(`${r}-bitmap`,o),o.once("destroy",()=>P.remove(`${r}-bitmap`)),o}uninstall(e){const t=`${e}-bitmap`,r=P.get(t);r&&(P.remove(t),r.destroy())}}const se=new kt;function Gt(){const{userAgent:n}=W.get().getNavigator();return/^((?!chrome|android).)*safari/i.test(n)}const zt=new Se;function Ye(n,e,t,r){const s=zt;s.minX=0,s.minY=0,s.maxX=n.width/r|0,s.maxY=n.height/r|0;const i=R.getOptimalTexture(s.width,s.height,r,!1);return i.source.uploadMethodId="image",i.source.resource=n,i.source.alphaMode="premultiply-alpha-on-upload",i.frame.width=e/r,i.frame.height=t/r,i.source.emit("update",i.source),i.updateUvs(),i}function Ht(n,e){const t=e.fontFamily,r=[],s={},i=/font-family:([^;"\s]+)/g,a=n.match(i);function o(c){s[c]||(r.push(c),s[c]=!0)}if(Array.isArray(t))for(let c=0;c<t.length;c++)o(t[c]);else o(t);a&&a.forEach(c=>{const l=c.split(":")[1].trim();o(l)});for(const c in e.tagStyles){const l=e.tagStyles[c].fontFamily;o(l)}return r}async function It(n){const t=await(await W.get().fetch(n)).blob(),r=new FileReader;return await new Promise((i,a)=>{r.onloadend=()=>i(r.result),r.onerror=a,r.readAsDataURL(t)})}async function ge(n,e){const t=await It(e);return`@font-face {
        font-family: "${n.fontFamily}";
        src: url('${t}');
        font-weight: ${n.fontWeight};
        font-style: ${n.fontStyle};
    }`}async function Dt(n,e){const t=n.filter(r=>P.has(r)).map((r,s)=>{if(!X.has(r)){const{url:i}=P.get(r);s===0?X.set(r,ge(e,i)):X.set(r,ge({...$.defaultFontOptions,fontFamily:r},i))}return X.get(r)});return(await Promise.all(t)).join(`
`)}function Ot(n,e,t,r,s){const{domElement:i,styleElement:a,svgRoot:o}=s;i.innerHTML=`<style>${e.cssStyle}</style><div>${n}</div>`,i.setAttribute("style",`transform: scale(${t});transform-origin: top left; display: inline-block`),a.textContent=r;const{width:c,height:l}=s.image;return o.setAttribute("width",c.toString()),o.setAttribute("height",l.toString()),new XMLSerializer().serializeToString(o)}function Wt(n,e){const t=D.getOptimalCanvasAndContext(n.width,n.height,e),{context:r}=t;return r.clearRect(0,0,n.width,n.height),r.drawImage(n,0,0),D.returnCanvasAndContext(t),t.canvas}function Et(n,e,t){return new Promise(async r=>{t&&await new Promise(s=>setTimeout(s,100)),n.onload=()=>{r()},n.src=`data:image/svg+xml;charset=utf8,${encodeURIComponent(e)}`,n.crossOrigin="anonymous"})}const me="http://www.w3.org/2000/svg",xe="http://www.w3.org/1999/xhtml",X=new Map;class je{constructor(){this.svgRoot=document.createElementNS(me,"svg"),this.foreignObject=document.createElementNS(me,"foreignObject"),this.domElement=document.createElementNS(xe,"div"),this.styleElement=document.createElementNS(xe,"style"),this.image=new Image;const{foreignObject:e,svgRoot:t,styleElement:r,domElement:s}=this;e.setAttribute("width","10000"),e.setAttribute("height","10000"),e.style.overflow="hidden",t.appendChild(e),e.appendChild(r),e.appendChild(s)}}class ${constructor(e){this._activeTextures={},this._renderer=e,this._createCanvas=e.type===ne.WEBGPU}getTexture(e){return this._buildTexturePromise(e.text,e.resolution,e.style)}getManagedTexture(e,t,r,s){if(this._activeTextures[s])return this._increaseReferenceCount(s),this._activeTextures[s].promise;const i=this._buildTexturePromise(e,t,r).then(a=>(this._activeTextures[s].texture=a,a));return this._activeTextures[s]={texture:null,promise:i,usageCount:1},i}async _buildTexturePromise(e,t,r){const s=S.get(je),i=Ht(e,r),a=await Dt(i,r),o=Lt(e,r,a,s),c=Math.ceil(Math.ceil(Math.max(1,o.width)+r.padding*2)*t),l=Math.ceil(Math.ceil(Math.max(1,o.height)+r.padding*2)*t),h=s.image;h.width=c|0,h.height=l|0;const d=Ot(e,r,t,a,s);await Et(h,d,Gt()&&i.length>0);let u=h;this._createCanvas&&(u=Wt(h,t));const f=Ye(u,h.width,h.height,t);return this._createCanvas&&this._renderer.texture.initSource(f.source),S.return(s),f}_increaseReferenceCount(e){this._activeTextures[e].usageCount++}decreaseReferenceCount(e){const t=this._activeTextures[e];t&&(t.usageCount--,t.usageCount===0&&(t.texture?this._cleanUp(t):t.promise.then(r=>{t.texture=r,this._cleanUp(t)}).catch(()=>{ie("HTMLTextSystem: Failed to clean texture")}),this._activeTextures[e]=null))}_cleanUp(e){R.returnTexture(e.texture),e.texture.source.resource=null,e.texture.source.uploadMethodId="unknown"}getReferenceCount(e){return this._activeTextures[e].usageCount}destroy(){this._activeTextures=null}}$.extension={type:[_.WebGLSystem,_.WebGPUSystem,_.CanvasSystem],name:"htmlText"};$.defaultFontOptions={fontFamily:"Arial",fontStyle:"normal",fontWeight:"normal"};let _e;function Lt(n,e,t,r){r=r||_e||(_e=new je);const{domElement:s,styleElement:i,svgRoot:a}=r;s.innerHTML=`<style>${e.cssStyle}</style><div>${n}</div>`,s.setAttribute("style","transform-origin: top left; display: inline-block"),t&&(i.textContent=t),document.body.appendChild(a);const o=s.getBoundingClientRect();a.remove();const c=U.measureFont(e.fontStyle).descent;return{width:o.width,height:o.height+c}}class Ne{constructor(e,t){this.state=Ce.for2d(),this._graphicsBatchesHash=Object.create(null),this.renderer=e,this._adaptor=t,this._adaptor.init()}validateRenderable(e){const t=e.context,r=!!this._graphicsBatchesHash[e.uid],s=this.renderer.graphicsContext.updateGpuContext(t);return!!(s.isBatchable||r!==s.isBatchable)}addRenderable(e,t){const r=this.renderer.graphicsContext.updateGpuContext(e.context);e._didGraphicsUpdate&&(e._didGraphicsUpdate=!1,this._rebuild(e)),r.isBatchable?this._addToBatcher(e,t):(this.renderer.renderPipes.batch.break(t),t.add(e))}updateRenderable(e){const t=this._graphicsBatchesHash[e.uid];if(t)for(let r=0;r<t.length;r++){const s=t[r];s.batcher.updateElement(s)}}destroyRenderable(e){this._graphicsBatchesHash[e.uid]&&this._removeBatchForRenderable(e.uid)}execute(e){if(!e.isRenderable)return;const t=this.renderer,r=e.context;if(!t.graphicsContext.getGpuContext(r).batches.length)return;const i=r.customShader||this._adaptor.shader;this.state.blendMode=e.groupBlendMode;const a=i.resources.localUniforms.uniforms;a.uTransformMatrix=e.groupTransform,a.uRound=t._roundPixels|e._roundPixels,ae(e.groupColorAlpha,a.uColor,0),this._adaptor.execute(this,e)}_rebuild(e){const t=!!this._graphicsBatchesHash[e.uid],r=this.renderer.graphicsContext.updateGpuContext(e.context);t&&this._removeBatchForRenderable(e.uid),r.isBatchable&&this._initBatchesForRenderable(e),e.batched=r.isBatchable}_addToBatcher(e,t){const r=this.renderer.renderPipes.batch,s=this._getBatchesForRenderable(e);for(let i=0;i<s.length;i++){const a=s[i];r.addToBatch(a,t)}}_getBatchesForRenderable(e){return this._graphicsBatchesHash[e.uid]||this._initBatchesForRenderable(e)}_initBatchesForRenderable(e){const t=e.context,r=this.renderer.graphicsContext.getGpuContext(t),s=this.renderer._roundPixels|e._roundPixels,i=r.batches.map(a=>{const o=S.get(mt);return a.copyTo(o),o.renderable=e,o.roundPixels=s,o});return this._graphicsBatchesHash[e.uid]=i,e.on("destroyed",()=>{this.destroyRenderable(e)}),i}_removeBatchForRenderable(e){this._graphicsBatchesHash[e].forEach(t=>{S.return(t)}),this._graphicsBatchesHash[e]=null}destroy(){this.renderer=null,this._adaptor.destroy(),this._adaptor=null,this.state=null;for(const e in this._graphicsBatchesHash)this._removeBatchForRenderable(e);this._graphicsBatchesHash=null}}Ne.extension={type:[_.WebGLPipes,_.WebGPUPipes,_.CanvasPipes],name:"graphics"};const Ke=class $e extends oe{constructor(...e){super({});let t=e[0]??{};typeof t=="number"&&(k(G,"PlaneGeometry constructor changed please use { width, height, verticesX, verticesY } instead"),t={width:t,height:e[1],verticesX:e[2],verticesY:e[3]}),this.build(t)}build(e){e={...$e.defaultOptions,...e},this.verticesX=this.verticesX??e.verticesX,this.verticesY=this.verticesY??e.verticesY,this.width=this.width??e.width,this.height=this.height??e.height;const t=this.verticesX*this.verticesY,r=[],s=[],i=[],a=this.verticesX-1,o=this.verticesY-1,c=this.width/a,l=this.height/o;for(let d=0;d<t;d++){const u=d%this.verticesX,f=d/this.verticesX|0;r.push(u*c,f*l),s.push(u/a,f/o)}const h=a*o;for(let d=0;d<h;d++){const u=d%a,f=d/a|0,p=f*this.verticesX+u,g=f*this.verticesX+u+1,m=(f+1)*this.verticesX+u,b=(f+1)*this.verticesX+u+1;i.push(p,g,m,g,b,m)}this.buffers[0].data=new Float32Array(r),this.buffers[1].data=new Float32Array(s),this.indexBuffer.data=new Uint32Array(i),this.buffers[0].update(),this.buffers[1].update(),this.indexBuffer.update()}};Ke.defaultOptions={width:100,height:100,verticesX:10,verticesY:10};let Xt=Ke;class ce{constructor(){this.batcher=null,this.batch=null,this.roundPixels=0}get blendMode(){return this.mesh.groupBlendMode}reset(){this.mesh=null,this.texture=null,this.batcher=null,this.batch=null}packIndex(e,t,r){const s=this.geometry.indices;for(let i=0;i<s.length;i++)e[t++]=s[i]+r}packAttributes(e,t,r,s){const i=this.mesh,a=this.geometry,o=i.groupTransform,c=s<<16|this.roundPixels&65535,l=o.a,h=o.b,d=o.c,u=o.d,f=o.tx,p=o.ty,g=a.positions,m=a.uvs,b=i.groupColorAlpha;for(let x=0;x<g.length;x+=2){const y=g[x],T=g[x+1];e[r]=l*y+d*T+f,e[r+1]=h*y+u*T+p,e[r+2]=m[x],e[r+3]=m[x+1],t[r+4]=b,t[r+5]=c,r+=6}}get vertexSize(){return this.geometry.positions.length/2}get indexSize(){return this.geometry.indices.length}}class qe{constructor(e,t){this.localUniforms=new E({uTransformMatrix:{value:new F,type:"mat3x3<f32>"},uColor:{value:new Float32Array([1,1,1,1]),type:"vec4<f32>"},uRound:{value:0,type:"f32"}}),this.localUniformsBindGroup=new ke({0:this.localUniforms}),this._meshDataHash=Object.create(null),this._gpuBatchableMeshHash=Object.create(null),this.renderer=e,this._adaptor=t,this._adaptor.init()}validateRenderable(e){const t=this._getMeshData(e),r=t.batched,s=e.batched;if(t.batched=s,r!==s)return!0;if(s){const i=e._geometry;if(i.indices.length!==t.indexSize||i.positions.length!==t.vertexSize)return t.indexSize=i.indices.length,t.vertexSize=i.positions.length,!0;const a=this._getBatchableMesh(e),o=e.texture;if(a.texture._source!==o._source&&a.texture._source!==o._source)return a.batcher.checkAndUpdateTexture(a,o)}return!1}addRenderable(e,t){const r=this.renderer.renderPipes.batch,{batched:s}=this._getMeshData(e);if(s){const i=this._getBatchableMesh(e);i.texture=e._texture,i.geometry=e._geometry,r.addToBatch(i)}else r.break(t),t.add({renderPipeId:"mesh",mesh:e})}updateRenderable(e){if(e.batched){const t=this._gpuBatchableMeshHash[e.uid];t.texture=e._texture,t.geometry=e._geometry,t.batcher.updateElement(t)}}destroyRenderable(e){this._meshDataHash[e.uid]=null;const t=this._gpuBatchableMeshHash[e.uid];S.return(t),this._gpuBatchableMeshHash[e.uid]=null}execute({mesh:e}){if(!e.isRenderable)return;e.state.blendMode=e.groupBlendMode;const t=this.localUniforms;t.uniforms.uTransformMatrix=e.groupTransform,t.uniforms.uRound=this.renderer._roundPixels|e._roundPixels,t.update(),ae(e.groupColorAlpha,t.uniforms.uColor,0),this._adaptor.execute(this,e)}_getMeshData(e){return this._meshDataHash[e.uid]||this._initMeshData(e)}_initMeshData(e){var t,r;return this._meshDataHash[e.uid]={batched:e.batched,indexSize:(t=e._geometry.indices)==null?void 0:t.length,vertexSize:(r=e._geometry.positions)==null?void 0:r.length},e.on("destroyed",()=>{this.destroyRenderable(e)}),this._meshDataHash[e.uid]}_getBatchableMesh(e){return this._gpuBatchableMeshHash[e.uid]||this._initBatchableMesh(e)}_initBatchableMesh(e){const t=S.get(ce);return t.mesh=e,t.texture=e._texture,t.roundPixels=this.renderer._roundPixels|e._roundPixels,this._gpuBatchableMeshHash[e.uid]=t,t.mesh=e,t}destroy(){for(const e in this._gpuBatchableMeshHash)this._gpuBatchableMeshHash[e]&&S.return(this._gpuBatchableMeshHash[e]);this._gpuBatchableMeshHash=null,this._meshDataHash=null,this.localUniforms=null,this.localUniformsBindGroup=null,this._adaptor.destroy(),this._adaptor=null,this.renderer=null}}qe.extension={type:[_.WebGLPipes,_.WebGPUPipes,_.CanvasPipes],name:"mesh"};const Ve=class Je extends Xt{constructor(e={}){e={...Je.defaultOptions,...e},super({width:e.width,height:e.height,verticesX:4,verticesY:4}),this._textureMatrix=new F,this.update(e)}update(e){this.width=e.width??this.width,this.height=e.height??this.height,this._originalWidth=e.originalWidth??this._originalWidth,this._originalHeight=e.originalHeight??this._originalHeight,this._leftWidth=e.leftWidth??this._leftWidth,this._rightWidth=e.rightWidth??this._rightWidth,this._topHeight=e.topHeight??this._topHeight,this._bottomHeight=e.bottomHeight??this._bottomHeight,e.textureMatrix&&this._textureMatrix.copyFrom(e.textureMatrix),this.updateUvs(),this.updatePositions()}updatePositions(){const e=this.positions,t=this._leftWidth+this._rightWidth,r=this.width>t?1:this.width/t,s=this._topHeight+this._bottomHeight,i=this.height>s?1:this.height/s,a=Math.min(r,i);e[9]=e[11]=e[13]=e[15]=this._topHeight*a,e[17]=e[19]=e[21]=e[23]=this.height-this._bottomHeight*a,e[25]=e[27]=e[29]=e[31]=this.height,e[2]=e[10]=e[18]=e[26]=this._leftWidth*a,e[4]=e[12]=e[20]=e[28]=this.width-this._rightWidth*a,e[6]=e[14]=e[22]=e[30]=this.width,this.getBuffer("aPosition").update()}updateUvs(){const e=this._textureMatrix,t=this.uvs;t[0]=t[8]=t[16]=t[24]=0,t[1]=t[3]=t[5]=t[7]=0,t[6]=t[14]=t[22]=t[30]=1,t[25]=t[27]=t[29]=t[31]=1;const r=1/this._originalWidth,s=1/this._originalHeight;t[2]=t[10]=t[18]=t[26]=r*this._leftWidth,t[9]=t[11]=t[13]=t[15]=s*this._topHeight,t[4]=t[12]=t[20]=t[28]=1-r*this._rightWidth,t[17]=t[19]=t[21]=t[23]=1-s*this._bottomHeight,jt(e,t),this.getBuffer("aUV").update()}};Ve.defaultOptions={width:100,height:100,leftWidth:10,topHeight:10,rightWidth:10,bottomHeight:10,originalWidth:100,originalHeight:100};let Yt=Ve;function jt(n,e,t){t??(t=e);const r=n.a,s=n.b,i=n.c,a=n.d,o=n.tx,c=n.ty;for(let l=0;l<e.length;l+=2){const h=e[l],d=e[l+1];t[l]=h*r+d*i+o,t[l+1]=h*s+d*a+c}return t}class Qe{constructor(e){this._gpuSpriteHash=Object.create(null),this._renderer=e}addRenderable(e,t){const r=this._getGpuSprite(e);e._didSpriteUpdate&&this._updateBatchableSprite(e,r),this._renderer.renderPipes.batch.addToBatch(r)}updateRenderable(e){const t=this._gpuSpriteHash[e.uid];e._didSpriteUpdate&&this._updateBatchableSprite(e,t),t.batcher.updateElement(t)}validateRenderable(e){const t=e._texture,r=this._getGpuSprite(e);return r.texture._source!==t._source?!r.batcher.checkAndUpdateTexture(r,t):!1}destroyRenderable(e){const t=this._gpuSpriteHash[e.uid];S.return(t),this._gpuSpriteHash[e.uid]=null}_updateBatchableSprite(e,t){e._didSpriteUpdate=!1,t.geometry.update(e),t.texture=e._texture}_getGpuSprite(e){return this._gpuSpriteHash[e.uid]||this._initGPUSprite(e)}_initGPUSprite(e){const t=new ce;return t.geometry=new Yt,t.mesh=e,t.texture=e._texture,t.roundPixels=this._renderer._roundPixels|e._roundPixels,this._gpuSpriteHash[e.uid]=t,e.on("destroyed",()=>{this.destroyRenderable(e)}),t}destroy(){for(const e in this._gpuSpriteHash)this._gpuSpriteHash[e].geometry.destroy();this._gpuSpriteHash=null,this._renderer=null}}Qe.extension={type:[_.WebGLPipes,_.WebGPUPipes,_.CanvasPipes],name:"nineSliceSprite"};const Nt={name:"tiling-bit",vertex:{header:`
            struct TilingUniforms {
                uMapCoord:mat3x3<f32>,
                uClampFrame:vec4<f32>,
                uClampOffset:vec2<f32>,
                uTextureTransform:mat3x3<f32>,
                uSizeAnchor:vec4<f32>
            };

            @group(2) @binding(0) var<uniform> tilingUniforms: TilingUniforms;
            @group(2) @binding(1) var uTexture: texture_2d<f32>;
            @group(2) @binding(2) var uSampler: sampler;
        `,main:`
            vUV = (tilingUniforms.uTextureTransform * vec3(aUV, 1.0)).xy;

            position = (position - tilingUniforms.uSizeAnchor.zw) * tilingUniforms.uSizeAnchor.xy;
        `},fragment:{header:`
            struct TilingUniforms {
                uMapCoord:mat3x3<f32>,
                uClampFrame:vec4<f32>,
                uClampOffset:vec2<f32>,
                uTextureTransform:mat3x3<f32>,
                uSizeAnchor:vec4<f32>
            };

            @group(2) @binding(0) var<uniform> tilingUniforms: TilingUniforms;
            @group(2) @binding(1) var uTexture: texture_2d<f32>;
            @group(2) @binding(2) var uSampler: sampler;
        `,main:`

            var coord = vUV + ceil(tilingUniforms.uClampOffset - vUV);
            coord = (tilingUniforms.uMapCoord * vec3(coord, 1.0)).xy;
            var unclamped = coord;
            coord = clamp(coord, tilingUniforms.uClampFrame.xy, tilingUniforms.uClampFrame.zw);

            var bias = 0.;

            if(unclamped.x == coord.x && unclamped.y == coord.y)
            {
                bias = -32.;
            } 

            outColor = textureSampleBias(uTexture, uSampler, coord, bias);
        `}},Kt={name:"tiling-bit",vertex:{header:`
            uniform mat3 uTextureTransform;
            uniform vec4 uSizeAnchor;
        
        `,main:`
            vUV = (uTextureTransform * vec3(aUV, 1.0)).xy;

            position = (position - uSizeAnchor.zw) * uSizeAnchor.xy;
        `},fragment:{header:`
            uniform sampler2D uTexture;
            uniform mat3 uMapCoord;
            uniform vec4 uClampFrame;
            uniform vec2 uClampOffset;
        `,main:`

        vec2 coord = vUV + ceil(uClampOffset - vUV);
        coord = (uMapCoord * vec3(coord, 1.0)).xy;
        vec2 unclamped = coord;
        coord = clamp(coord, uClampFrame.xy, uClampFrame.zw);
        
        outColor = texture(uTexture, coord, unclamped == coord ? 0.0 : -32.0);// lod-bias very negative to force lod 0
    
        `}};let Q,Z;class $t extends Be{constructor(){Q??(Q=Pe({name:"tiling-sprite-shader",bits:[bt,Nt,Me]})),Z??(Z=Fe({name:"tiling-sprite-shader",bits:[yt,Kt,Re]}));const e=new E({uMapCoord:{value:new F,type:"mat3x3<f32>"},uClampFrame:{value:new Float32Array([0,0,1,1]),type:"vec4<f32>"},uClampOffset:{value:new Float32Array([0,0]),type:"vec2<f32>"},uTextureTransform:{value:new F,type:"mat3x3<f32>"},uSizeAnchor:{value:new Float32Array([100,100,.5,.5]),type:"vec4<f32>"}});super({glProgram:Z,gpuProgram:Q,resources:{localUniforms:new E({uTransformMatrix:{value:new F,type:"mat3x3<f32>"},uColor:{value:new Float32Array([1,1,1,1]),type:"vec4<f32>"},uRound:{value:0,type:"f32"}}),tilingUniforms:e,uTexture:M.EMPTY.source,uSampler:M.EMPTY.source.style}})}updateUniforms(e,t,r,s,i,a){const o=this.resources.tilingUniforms,c=a.width,l=a.height,h=a.textureMatrix,d=o.uniforms.uTextureTransform;d.set(r.a*c/e,r.b*c/t,r.c*l/e,r.d*l/t,r.tx/e,r.ty/t),d.invert(),o.uniforms.uMapCoord=h.mapCoord,o.uniforms.uClampFrame=h.uClampFrame,o.uniforms.uClampOffset=h.uClampOffset,o.uniforms.uTextureTransform=d,o.uniforms.uSizeAnchor[0]=e,o.uniforms.uSizeAnchor[1]=t,o.uniforms.uSizeAnchor[2]=s,o.uniforms.uSizeAnchor[3]=i,a&&(this.resources.uTexture=a.source,this.resources.uSampler=a.source.style)}}class qt extends oe{constructor(){super({positions:new Float32Array([0,0,1,0,1,1,0,1]),uvs:new Float32Array([0,0,1,0,1,1,0,1]),indices:new Uint32Array([0,1,2,0,2,3])})}}function Vt(n,e){const t=n.anchor.x,r=n.anchor.y;e[0]=-t*n.width,e[1]=-r*n.height,e[2]=(1-t)*n.width,e[3]=-r*n.height,e[4]=(1-t)*n.width,e[5]=(1-r)*n.height,e[6]=-t*n.width,e[7]=(1-r)*n.height}function Jt(n,e,t,r){let s=0;const i=n.length/(e||2),a=r.a,o=r.b,c=r.c,l=r.d,h=r.tx,d=r.ty;for(t*=e;s<i;){const u=n[t],f=n[t+1];n[t]=a*u+c*f+h,n[t+1]=o*u+l*f+d,t+=e,s++}}function Qt(n,e){const t=n.texture,r=t.frame.width,s=t.frame.height;let i=0,a=0;n._applyAnchorToTexture&&(i=n.anchor.x,a=n.anchor.y),e[0]=e[6]=-i,e[2]=e[4]=1-i,e[1]=e[3]=-a,e[5]=e[7]=1-a;const o=F.shared;o.copyFrom(n._tileTransform.matrix),o.tx/=n.width,o.ty/=n.height,o.invert(),o.scale(n.width/r,n.height/s),Jt(e,2,0,o)}const Y=new qt;class Ze{constructor(e){this._tilingSpriteDataHash=Object.create(null),this._renderer=e}validateRenderable(e){const t=this._getTilingSpriteData(e),r=t.canBatch;this._updateCanBatch(e);const s=t.canBatch;if(s&&s===r){const{batchableMesh:i}=t;if(i.texture._source!==e.texture._source)return!i.batcher.checkAndUpdateTexture(i,e.texture)}return r!==s}addRenderable(e,t){const r=this._renderer.renderPipes.batch;this._updateCanBatch(e);const s=this._getTilingSpriteData(e),{geometry:i,canBatch:a}=s;if(a){s.batchableMesh||(s.batchableMesh=new ce);const o=s.batchableMesh;e._didTilingSpriteUpdate&&(e._didTilingSpriteUpdate=!1,this._updateBatchableMesh(e),o.geometry=i,o.mesh=e,o.texture=e._texture),o.roundPixels=this._renderer._roundPixels|e._roundPixels,r.addToBatch(o)}else r.break(t),s.shader||(s.shader=new $t),this.updateRenderable(e),t.add(e)}execute(e){const{shader:t}=this._tilingSpriteDataHash[e.uid];t.groups[0]=this._renderer.globalUniforms.bindGroup;const r=t.resources.localUniforms.uniforms;r.uTransformMatrix=e.groupTransform,r.uRound=this._renderer._roundPixels|e._roundPixels,ae(e.groupColorAlpha,r.uColor,0),this._renderer.encoder.draw({geometry:Y,shader:t,state:Ce.default2d})}updateRenderable(e){const t=this._getTilingSpriteData(e),{canBatch:r}=t;if(r){const{batchableMesh:s}=t;e._didTilingSpriteUpdate&&this._updateBatchableMesh(e),s.batcher.updateElement(s)}else if(e._didTilingSpriteUpdate){const{shader:s}=t;s.updateUniforms(e.width,e.height,e._tileTransform.matrix,e.anchor.x,e.anchor.y,e.texture)}e._didTilingSpriteUpdate=!1}destroyRenderable(e){var r;const t=this._getTilingSpriteData(e);t.batchableMesh=null,(r=t.shader)==null||r.destroy(),this._tilingSpriteDataHash[e.uid]=null}_getTilingSpriteData(e){return this._tilingSpriteDataHash[e.uid]||this._initTilingSpriteData(e)}_initTilingSpriteData(e){const t=new oe({indices:Y.indices,positions:Y.positions.slice(),uvs:Y.uvs.slice()});return this._tilingSpriteDataHash[e.uid]={canBatch:!0,renderable:e,geometry:t},e.on("destroyed",()=>{this.destroyRenderable(e)}),this._tilingSpriteDataHash[e.uid]}_updateBatchableMesh(e){const t=this._getTilingSpriteData(e),{geometry:r}=t,s=e.texture.source.style;s.addressMode!=="repeat"&&(s.addressMode="repeat",s.update()),Qt(e,r.uvs),Vt(e,r.positions)}destroy(){for(const e in this._tilingSpriteDataHash)this.destroyRenderable(this._tilingSpriteDataHash[e].renderable);this._tilingSpriteDataHash=null,this._renderer=null}_updateCanBatch(e){const t=this._getTilingSpriteData(e),r=e.texture;let s=!0;return this._renderer.type===ne.WEBGL&&(s=this._renderer.context.supports.nonPowOf2wrapping),t.canBatch=r.textureMatrix.isSimple&&(s||r.source.isPowerOfTwo),t.canBatch}}Ze.extension={type:[_.WebGLPipes,_.WebGPUPipes,_.CanvasPipes],name:"tilingSprite"};const ee={test(n){return typeof n=="string"&&n.startsWith("info face=")},parse(n){const e=n.match(/^[a-z]+\s+.+$/gm),t={info:[],common:[],page:[],char:[],chars:[],kerning:[],kernings:[],distanceField:[]};for(const d in e){const u=e[d].match(/^[a-z]+/gm)[0],f=e[d].match(/[a-zA-Z]+=([^\s"']+|"([^"]*)")/gm),p={};for(const g in f){const m=f[g].split("="),b=m[0],x=m[1].replace(/"/gm,""),y=parseFloat(x),T=isNaN(y)?x:y;p[b]=T}t[u].push(p)}const r={chars:{},pages:[],lineHeight:0,fontSize:0,fontFamily:"",distanceField:null,baseLineOffset:0},[s]=t.info,[i]=t.common,[a]=t.distanceField??[];a&&(r.distanceField={range:parseInt(a.distanceRange,10),type:a.fieldType}),r.fontSize=parseInt(s.size,10),r.fontFamily=s.face,r.lineHeight=parseInt(i.lineHeight,10);const o=t.page;for(let d=0;d<o.length;d++)r.pages.push({id:parseInt(o[d].id,10)||0,file:o[d].file});const c={};r.baseLineOffset=r.lineHeight-parseInt(i.base,10);const l=t.char;for(let d=0;d<l.length;d++){const u=l[d],f=parseInt(u.id,10);let p=u.letter??u.char??String.fromCharCode(f);p==="space"&&(p=" "),c[f]=p,r.chars[p]={id:f,page:parseInt(u.page,10)||0,x:parseInt(u.x,10),y:parseInt(u.y,10),width:parseInt(u.width,10),height:parseInt(u.height,10),xOffset:parseInt(u.xoffset,10),yOffset:parseInt(u.yoffset,10),xAdvance:parseInt(u.xadvance,10),kerning:{}}}const h=t.kerning||[];for(let d=0;d<h.length;d++){const u=parseInt(h[d].first,10),f=parseInt(h[d].second,10),p=parseInt(h[d].amount,10);r.chars[c[f]].kerning[c[u]]=p}return r}},be={test(n){const e=n;return typeof e!="string"&&"getElementsByTagName"in e&&e.getElementsByTagName("page").length&&e.getElementsByTagName("info")[0].getAttribute("face")!==null},parse(n){const e={chars:{},pages:[],lineHeight:0,fontSize:0,fontFamily:"",distanceField:null,baseLineOffset:0},t=n.getElementsByTagName("info")[0],r=n.getElementsByTagName("common")[0],s=n.getElementsByTagName("distanceField")[0];s&&(e.distanceField={type:s.getAttribute("fieldType"),range:parseInt(s.getAttribute("distanceRange"),10)});const i=n.getElementsByTagName("page"),a=n.getElementsByTagName("char"),o=n.getElementsByTagName("kerning");e.fontSize=parseInt(t.getAttribute("size"),10),e.fontFamily=t.getAttribute("face"),e.lineHeight=parseInt(r.getAttribute("lineHeight"),10);for(let l=0;l<i.length;l++)e.pages.push({id:parseInt(i[l].getAttribute("id"),10)||0,file:i[l].getAttribute("file")});const c={};e.baseLineOffset=e.lineHeight-parseInt(r.getAttribute("base"),10);for(let l=0;l<a.length;l++){const h=a[l],d=parseInt(h.getAttribute("id"),10);let u=h.getAttribute("letter")??h.getAttribute("char")??String.fromCharCode(d);u==="space"&&(u=" "),c[d]=u,e.chars[u]={id:d,page:parseInt(h.getAttribute("page"),10)||0,x:parseInt(h.getAttribute("x"),10),y:parseInt(h.getAttribute("y"),10),width:parseInt(h.getAttribute("width"),10),height:parseInt(h.getAttribute("height"),10),xOffset:parseInt(h.getAttribute("xoffset"),10),yOffset:parseInt(h.getAttribute("yoffset"),10),xAdvance:parseInt(h.getAttribute("xadvance"),10),kerning:{}}}for(let l=0;l<o.length;l++){const h=parseInt(o[l].getAttribute("first"),10),d=parseInt(o[l].getAttribute("second"),10),u=parseInt(o[l].getAttribute("amount"),10);e.chars[c[d]].kerning[c[h]]=u}return e}},ye={test(n){return typeof n=="string"&&n.includes("<font>")?be.test(W.get().parseXML(n)):!1},parse(n){return be.parse(W.get().parseXML(n))}};class et extends Ee{constructor(e,t){super();const{textures:r,data:s}=e;Object.keys(s.pages).forEach(i=>{const a=s.pages[parseInt(i,10)],o=r[a.id];this.pages.push({texture:o})}),Object.keys(s.chars).forEach(i=>{const a=s.chars[i],o=r[a.page].source,c=new N(a.x,a.y,a.width,a.height),l=new M({source:o,frame:c});this.chars[i]={id:i.codePointAt(0),xOffset:a.xOffset,yOffset:a.yOffset,xAdvance:a.xAdvance,kerning:a.kerning??{},texture:l}}),this.baseRenderedFontSize=s.fontSize,this.baseMeasurementFontSize=s.fontSize,this.fontMetrics={ascent:0,descent:0,fontSize:s.fontSize},this.baseLineOffset=s.baseLineOffset,this.lineHeight=s.lineHeight,this.fontFamily=s.fontFamily,this.distanceField=s.distanceField??{type:"none",range:0},this.url=t}destroy(){super.destroy();for(let e=0;e<this.pages.length;e++){const{texture:t}=this.pages[e];t.destroy(!0)}this.pages=null}static install(e){se.install(e)}static uninstall(e){se.uninstall(e)}}const Zt=[".xml",".fnt"],er={extension:_.CacheParser,test:n=>n instanceof et,getCacheableAssets(n,e){const t={};return n.forEach(r=>{t[r]=e}),t[`${e.fontFamily}-bitmap`]=e,t}},tr={extension:{type:_.LoadParser,priority:ut.Normal},test(n){return Zt.includes(V.extname(n).toLowerCase())},async testParse(n){return ee.test(n)||ye.test(n)},async parse(n,e,t){const r=ee.test(n)?ee.parse(n):ye.parse(n),{src:s}=e,{pages:i}=r,a=[];for(let h=0;h<i.length;++h){const d=i[h].file;let u=V.join(V.dirname(s),d);u=ft(u,s),a.push(u)}const o=await t.load(a),c=a.map(h=>o[h]);return new et({data:r,textures:c},s)},async load(n,e){return await(await W.get().fetch(n)).text()},unload(n){n.destroy()}},rr={name:"local-uniform-msdf-bit",vertex:{header:`
            struct LocalUniforms {
                uColor:vec4<f32>,
                uTransformMatrix:mat3x3<f32>,
                uDistance: f32,
                uRound:f32,
            }

            @group(2) @binding(0) var<uniform> localUniforms : LocalUniforms;
        `,main:`
            vColor *= localUniforms.uColor;
            modelMatrix *= localUniforms.uTransformMatrix;
        `,end:`
            if(localUniforms.uRound == 1)
            {
                vPosition = vec4(roundPixels(vPosition.xy, globalUniforms.uResolution), vPosition.zw);
            }
        `},fragment:{header:`
            struct LocalUniforms {
                uColor:vec4<f32>,
                uTransformMatrix:mat3x3<f32>,
                uDistance: f32
            }

            @group(2) @binding(0) var<uniform> localUniforms : LocalUniforms;
         `,main:` 
            outColor = vColor * calculateMSDFAlpha(outColor, localUniforms.uDistance);
        `}},sr={name:"local-uniform-msdf-bit",vertex:{header:`
            uniform mat3 uTransformMatrix;
            uniform vec4 uColor;
            uniform float uRound;
        `,main:`
            vColor *= uColor;
            modelMatrix *= uTransformMatrix;
        `,end:`
            if(uRound == 1.)
            {
                gl_Position.xy = roundPixels(gl_Position.xy, uResolution);
            }
        `},fragment:{header:`
            uniform float uDistance;
         `,main:` 
            outColor = vColor * calculateMSDFAlpha(outColor, uDistance);
        `}},ir={name:"msdf-bit",fragment:{header:`
            fn calculateMSDFAlpha(msdfColor:vec4<f32>, distance:f32) -> f32 {
                
                // MSDF
                var median = msdfColor.r + msdfColor.g + msdfColor.b -
                    min(msdfColor.r, min(msdfColor.g, msdfColor.b)) -
                    max(msdfColor.r, max(msdfColor.g, msdfColor.b));
            
                // SDF
                median = min(median, msdfColor.a);

                var screenPxDistance = distance * (median - 0.5);
                var alpha = clamp(screenPxDistance + 0.5, 0.0, 1.0);
                if (median < 0.01) {
                    alpha = 0.0;
                } else if (median > 0.99) {
                    alpha = 1.0;
                }

                return alpha;
            }
        `}},nr={name:"msdf-bit",fragment:{header:`
            float calculateMSDFAlpha(vec4 msdfColor, float distance) {
                
                // MSDF
                float median = msdfColor.r + msdfColor.g + msdfColor.b -
                                min(msdfColor.r, min(msdfColor.g, msdfColor.b)) -
                                max(msdfColor.r, max(msdfColor.g, msdfColor.b));
               
                // SDF
                median = min(median, msdfColor.a);
            
                float screenPxDistance = distance * (median - 0.5);
                float alpha = clamp(screenPxDistance + 0.5, 0.0, 1.0);
           
                if (median < 0.01) {
                    alpha = 0.0;
                } else if (median > 0.99) {
                    alpha = 1.0;
                }

                return alpha;
            }
        `}};class ar extends Be{constructor(){const e=new E({uColor:{value:new Float32Array([1,1,1,1]),type:"vec4<f32>"},uTransformMatrix:{value:new F,type:"mat3x3<f32>"},uDistance:{value:4,type:"f32"},uRound:{value:0,type:"f32"}}),t=Pe({name:"sdf-shader",bits:[Tt,wt(ue),rr,ir,Me]}),r=Fe({name:"sdf-shader",bits:[vt,St(ue),sr,nr,Re]});super({glProgram:r,gpuProgram:t,resources:{localUniforms:e,batchSamplers:Ct}})}}class tt{constructor(e){this._gpuBitmapText={},this._renderer=e}validateRenderable(e){const t=this._getGpuBitmapText(e);return e._didTextUpdate&&(e._didTextUpdate=!1,this._updateContext(e,t)),this._renderer.renderPipes.graphics.validateRenderable(t)}addRenderable(e,t){const r=this._getGpuBitmapText(e);Te(e,r),e._didTextUpdate&&(e._didTextUpdate=!1,this._updateContext(e,r)),this._renderer.renderPipes.graphics.addRenderable(r,t),r.context.customShader&&this._updateDistanceField(e)}destroyRenderable(e){this._destroyRenderableByUid(e.uid)}_destroyRenderableByUid(e){S.return(this._gpuBitmapText[e]),this._gpuBitmapText[e]=null}updateRenderable(e){const t=this._getGpuBitmapText(e);Te(e,t),this._renderer.renderPipes.graphics.updateRenderable(t),t.context.customShader&&this._updateDistanceField(e)}_updateContext(e,t){var f;const{context:r}=t,s=se.getFont(e.text,e._style);r.clear(),s.distanceField.type!=="none"&&(r.customShader||(this._sdfShader||(this._sdfShader=new ar),r.customShader=this._sdfShader));const i=Array.from(e.text),a=e._style;let o=(((f=a._stroke)==null?void 0:f.width)||0)/2;o+=s.baseLineOffset;const c=Xe(i,a,s);let l=0;const h=a.padding,d=c.scale;r.translate(-e._anchor._x*c.width-h,-e._anchor._y*(c.height+c.offsetY)-h).scale(d,d);const u=a._fill.color;for(let p=0;p<c.lines.length;p++){const g=c.lines[p];for(let m=0;m<g.charPositions.length;m++){const b=i[l++],x=s.chars[b];x!=null&&x.texture&&r.texture(x.texture,u,Math.round(g.charPositions[m]+x.xOffset),Math.round(o+x.yOffset))}o+=s.lineHeight}}_getGpuBitmapText(e){return this._gpuBitmapText[e.uid]||this.initGpuText(e)}initGpuText(e){const t=S.get(xt);return this._gpuBitmapText[e.uid]=t,this._updateContext(e,t),e.on("destroyed",()=>{this.destroyRenderable(e)}),this._gpuBitmapText[e.uid]}_updateDistanceField(e){const t=this._getGpuBitmapText(e).context,r=e._style.fontFamily,s=P.get(`${r}-bitmap`),{a:i,b:a,c:o,d:c}=e.groupTransform,l=Math.sqrt(i*i+a*a),h=Math.sqrt(o*o+c*c),d=(Math.abs(l)+Math.abs(h))/2,u=s.baseRenderedFontSize/e._style.fontSize,f=e.resolution??this._renderer.resolution,p=d*s.distanceField.range*(1/u)*f;t.customShader.resources.localUniforms.uniforms.uDistance=p}destroy(){var e;for(const t in this._gpuBitmapText)this._destroyRenderableByUid(t);this._gpuBitmapText=null,(e=this._sdfShader)==null||e.destroy(!0),this._sdfShader=null,this._renderer=null}}tt.extension={type:[_.WebGLPipes,_.WebGPUPipes,_.CanvasPipes],name:"bitmapText"};function Te(n,e){e.groupTransform=n.groupTransform,e.groupColorAlpha=n.groupColorAlpha,e.groupColor=n.groupColor,e.groupBlendMode=n.groupBlendMode,e.globalDisplayStatus=n.globalDisplayStatus,e.groupTransform=n.groupTransform,e.localDisplayStatus=n.localDisplayStatus,e.groupAlpha=n.groupAlpha,e._roundPixels=n._roundPixels}class rt{constructor(e){this._gpuText=Object.create(null),this._renderer=e}validateRenderable(e){const t=this._getGpuText(e),r=e._getKey();return t.textureNeedsUploading?(t.textureNeedsUploading=!1,!0):t.currentKey!==r}addRenderable(e){const r=this._getGpuText(e).batchableSprite;e._didTextUpdate&&this._updateText(e),this._renderer.renderPipes.batch.addToBatch(r)}updateRenderable(e){const r=this._getGpuText(e).batchableSprite;e._didTextUpdate&&this._updateText(e),r.batcher.updateElement(r)}destroyRenderable(e){this._destroyRenderableById(e.uid)}_destroyRenderableById(e){const t=this._gpuText[e];this._renderer.htmlText.decreaseReferenceCount(t.currentKey),S.return(t.batchableSprite),this._gpuText[e]=null}_updateText(e){const t=e._getKey(),r=this._getGpuText(e),s=r.batchableSprite;r.currentKey!==t&&this._updateGpuText(e).catch(a=>{console.error(a)}),e._didTextUpdate=!1;const i=e._style.padding;te(s.bounds,e._anchor,s.texture,i)}async _updateGpuText(e){e._didTextUpdate=!1;const t=this._getGpuText(e);if(t.generatingTexture)return;const r=e._getKey();this._renderer.htmlText.decreaseReferenceCount(t.currentKey),t.generatingTexture=!0,t.currentKey=r;const s=e.resolution??this._renderer.resolution,i=await this._renderer.htmlText.getManagedTexture(e.text,s,e._style,e._getKey()),a=t.batchableSprite;a.texture=t.texture=i,t.generatingTexture=!1,t.textureNeedsUploading=!0,e._onUpdate();const o=e._style.padding;te(a.bounds,e._anchor,a.texture,o)}_getGpuText(e){return this._gpuText[e.uid]||this.initGpuText(e)}initGpuText(e){const t={texture:M.EMPTY,currentKey:"--",batchableSprite:S.get(Ae),textureNeedsUploading:!1,generatingTexture:!1},r=t.batchableSprite;return r.renderable=e,r.texture=M.EMPTY,r.bounds={minX:0,maxX:1,minY:0,maxY:0},r.roundPixels=this._renderer._roundPixels|e._roundPixels,this._gpuText[e.uid]=t,e.on("destroyed",()=>{this.destroyRenderable(e)}),t}destroy(){for(const e in this._gpuText)this._destroyRenderableById(e);this._gpuText=null,this._renderer=null}}rt.extension={type:[_.WebGLPipes,_.WebGPUPipes,_.CanvasPipes],name:"htmlText"};class st{constructor(e){this._gpuText=Object.create(null),this._renderer=e}validateRenderable(e){const t=this._getGpuText(e),r=e._getKey();if(t.currentKey!==r){const s=e.resolution??this._renderer.resolution,{width:i,height:a}=this._renderer.canvasText.getTextureSize(e.text,s,e._style);return!(this._renderer.canvasText.getReferenceCount(t.currentKey)===1&&i===t.texture._source.width&&a===t.texture._source.height)}return!1}addRenderable(e,t){const s=this._getGpuText(e).batchableSprite;e._didTextUpdate&&this._updateText(e),this._renderer.renderPipes.batch.addToBatch(s)}updateRenderable(e){const r=this._getGpuText(e).batchableSprite;e._didTextUpdate&&this._updateText(e),r.batcher.updateElement(r)}destroyRenderable(e){this._destroyRenderableById(e.uid)}_destroyRenderableById(e){const t=this._gpuText[e];this._renderer.canvasText.decreaseReferenceCount(t.currentKey),S.return(t.batchableSprite),this._gpuText[e]=null}_updateText(e){const t=e._getKey(),r=this._getGpuText(e),s=r.batchableSprite;r.currentKey!==t&&this._updateGpuText(e),e._didTextUpdate=!1;const i=e._style.padding;te(s.bounds,e._anchor,s.texture,i)}_updateGpuText(e){const t=this._getGpuText(e),r=t.batchableSprite;t.texture&&this._renderer.canvasText.decreaseReferenceCount(t.currentKey);const s=e.resolution??this._renderer.resolution;t.texture=r.texture=this._renderer.canvasText.getTexture(e.text,s,e._style,e._getKey()),t.currentKey=e._getKey(),r.texture=t.texture}_getGpuText(e){return this._gpuText[e.uid]||this.initGpuText(e)}initGpuText(e){const t={texture:null,currentKey:"--",batchableSprite:S.get(Ae)};return t.batchableSprite.renderable=e,t.batchableSprite.bounds={minX:0,maxX:1,minY:0,maxY:0},t.batchableSprite.roundPixels=this._renderer._roundPixels|e._roundPixels,this._gpuText[e.uid]=t,this._updateText(e),e.on("destroyed",()=>{this.destroyRenderable(e)}),t}destroy(){for(const e in this._gpuText)this._destroyRenderableById(e);this._gpuText=null,this._renderer=null}}st.extension={type:[_.WebGLPipes,_.WebGPUPipes,_.CanvasPipes],name:"text"};function we(n,e,t){for(let r=0,s=4*t*e;r<e;++r,s+=4)if(n[s+3]!==0)return!1;return!0}function ve(n,e,t,r,s){const i=4*e;for(let a=r,o=r*i+4*t;a<=s;++a,o+=i)if(n[o+3]!==0)return!1;return!0}function or(n,e=1){const{width:t,height:r}=n,s=n.getContext("2d",{willReadFrequently:!0});if(s===null)throw new TypeError("Failed to get canvas 2D context");const a=s.getImageData(0,0,t,r).data;let o=0,c=0,l=t-1,h=r-1;for(;c<r&&we(a,t,c);)++c;if(c===r)return N.EMPTY;for(;we(a,t,h);)--h;for(;ve(a,t,o,c,h);)++o;for(;ve(a,t,l,c,h);)--l;return++l,++h,new N(o/e,c/e,(l-o)/e,(h-c)/e)}class it{constructor(){this._activeTextures={}}getTextureSize(e,t,r){const s=U.measureText(e||" ",r);let i=Math.ceil(Math.ceil(Math.max(1,s.width)+r.padding*2)*t),a=Math.ceil(Math.ceil(Math.max(1,s.height)+r.padding*2)*t);return i=Math.ceil(i-1e-6),a=Math.ceil(a-1e-6),i=de(i),a=de(a),{width:i,height:a}}getTexture(e,t,r,s){if(this._activeTextures[s])return this._increaseReferenceCount(s),this._activeTextures[s].texture;const i=U.measureText(e||" ",r),a=Math.ceil(Math.ceil(Math.max(1,i.width)+r.padding*2)*t),o=Math.ceil(Math.ceil(Math.max(1,i.height)+r.padding*2)*t),c=D.getOptimalCanvasAndContext(a,o),{canvas:l}=c;this.renderTextToCanvas(e,r,t,c);const h=Ye(l,a,o,t);if(r.trim){const d=or(l,t);h.frame.copyFrom(d),h.updateUvs()}return this._activeTextures[s]={canvasAndContext:c,texture:h,usageCount:1},h}_increaseReferenceCount(e){this._activeTextures[e].usageCount++}decreaseReferenceCount(e){const t=this._activeTextures[e];if(t.usageCount--,t.usageCount===0){D.returnCanvasAndContext(t.canvasAndContext),R.returnTexture(t.texture);const r=t.texture.source;r.resource=null,r.uploadMethodId="unknown",r.alphaMode="no-premultiply-alpha",this._activeTextures[e]=null}}getReferenceCount(e){return this._activeTextures[e].usageCount}renderTextToCanvas(e,t,r,s){var x,y,T,H;const{canvas:i,context:a}=s,o=re(t),c=U.measureText(e||" ",t),l=c.lines,h=c.lineHeight,d=c.lineWidths,u=c.maxLineWidth,f=c.fontProperties,p=i.height;if(a.resetTransform(),a.scale(r,r),a.clearRect(0,0,c.width+4,c.height+4),(x=t._stroke)!=null&&x.width){const w=t._stroke;a.lineWidth=w.width,a.miterLimit=w.miterLimit,a.lineJoin=w.join,a.lineCap=w.cap}a.font=o;let g,m;const b=t.dropShadow?2:1;for(let w=0;w<b;++w){const B=t.dropShadow&&w===0,A=B?Math.ceil(Math.max(1,p)+t.padding*2):0,z=A*r;if(B){a.fillStyle="black",a.strokeStyle="black";const v=t.dropShadow,nt=v.color,at=v.alpha;a.shadowColor=j.shared.setValue(nt).setAlpha(at).toRgbaString();const ot=v.blur*r,le=v.distance*r;a.shadowBlur=ot,a.shadowOffsetX=Math.cos(v.angle)*le,a.shadowOffsetY=Math.sin(v.angle)*le+z}else a.globalAlpha=((y=t._fill)==null?void 0:y.alpha)??1,a.fillStyle=t._fill?K(t._fill,a):null,(T=t._stroke)!=null&&T.width&&(a.strokeStyle=K(t._stroke,a)),a.shadowColor="black";let O=(h-f.fontSize)/2;h-f.fontSize<0&&(O=0);const L=((H=t._stroke)==null?void 0:H.width)??0;for(let v=0;v<l.length;v++)g=L/2,m=L/2+v*h+f.ascent+O,t.align==="right"?g+=u-d[v]:t.align==="center"&&(g+=(u-d[v])/2),t._stroke&&this._drawLetterSpacing(l[v],t,s,g+t.padding,m+t.padding-A,!0),t._fill!==void 0&&this._drawLetterSpacing(l[v],t,s,g+t.padding,m+t.padding-A)}}_drawLetterSpacing(e,t,r,s,i,a=!1){const{context:o}=r,c=t.letterSpacing;let l=!1;if(U.experimentalLetterSpacingSupported&&(U.experimentalLetterSpacing?(o.letterSpacing=`${c}px`,o.textLetterSpacing=`${c}px`,l=!0):(o.letterSpacing="0px",o.textLetterSpacing="0px")),c===0||l){a?o.strokeText(e,s,i):o.fillText(e,s,i);return}let h=s;const d=U.graphemeSegmenter(e);let u=o.measureText(e).width,f=0;for(let p=0;p<d.length;++p){const g=d[p];a?o.strokeText(g,h,i):o.fillText(g,h,i);let m="";for(let b=p+1;b<d.length;++b)m+=d[b];f=o.measureText(m).width,h+=u-f+c,u=f}}destroy(){this._activeTextures=null}}it.extension={type:[_.WebGLSystem,_.WebGPUSystem,_.CanvasSystem],name:"canvasText"};C.add(Ge);C.add(ze);C.add(Ne);C.add(_t);C.add(qe);C.add(it);C.add(st);C.add(tt,tr,er);C.add($);C.add(rt);C.add(Ze);C.add(Qe);C.add(De);C.add(He);
